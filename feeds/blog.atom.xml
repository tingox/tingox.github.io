<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Just a blog - blog</title><link href="https://tingox.github.io/" rel="alternate"></link><link href="https://tingox.github.io/feeds/blog.atom.xml" rel="self"></link><id>https://tingox.github.io/</id><updated>2020-09-25T19:39:42+02:00</updated><entry><title>Static generators for picture galleries</title><link href="https://tingox.github.io/static-generators-for-picture-galleries.html" rel="alternate"></link><published>2020-09-25T19:39:42+02:00</published><updated>2020-09-25T19:39:42+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2020-09-25:/static-generators-for-picture-galleries.html</id><summary type="html">&lt;p&gt;If I want to put picture galleries on the web, I should look at static generators for picture galleries, as I have no need of comments and all that stuff.
Some possible candidates are &lt;a href="http://curator.sourceforge.net/local/"&gt;curator&lt;/a&gt;, &lt;a href="https://www.thregr.org/~wavexx/software/fgallery/"&gt;fgallery&lt;/a&gt;, 
&lt;a href="https://sml.zincube.net/~niol/repositories.git/lazygal/about/"&gt;lazygal&lt;/a&gt;, &lt;a href="http://sigal.saimon.org/en/latest/"&gt;Sigal&lt;/a&gt;, &lt;a href="https://github.com/kensanata/sitelen-mute"&gt;Sitelen Mute&lt;/a&gt;.
The question then, is how to choose one? curator is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If I want to put picture galleries on the web, I should look at static generators for picture galleries, as I have no need of comments and all that stuff.
Some possible candidates are &lt;a href="http://curator.sourceforge.net/local/"&gt;curator&lt;/a&gt;, &lt;a href="https://www.thregr.org/~wavexx/software/fgallery/"&gt;fgallery&lt;/a&gt;, 
&lt;a href="https://sml.zincube.net/~niol/repositories.git/lazygal/about/"&gt;lazygal&lt;/a&gt;, &lt;a href="http://sigal.saimon.org/en/latest/"&gt;Sigal&lt;/a&gt;, &lt;a href="https://github.com/kensanata/sitelen-mute"&gt;Sitelen Mute&lt;/a&gt;.
The question then, is how to choose one? curator is written in Python (good), but is a bit old (Python 2?). fgallery is written in perl, and has a bigger list of dependencies than
the other candidates. lazygal looks quite all right, Python &amp;gt;= 3.7 (good) and can do lots of stuff. Sigal requires Python &amp;gt;= 3.5 (good), can do the same things that lazygal can, it 
supports relative output, and more. It doesn't have support for facedetect, if you need that. Sitelen Mute requires perl (like fgallery) and has a quite big list of dependencies, 
so even if it has facedetect, I think I'll opt out of using it.&lt;/p&gt;
&lt;p&gt;Hmm, it seems like I have decided to try Sigal then.&lt;/p&gt;</content><category term="blog"></category><category term="web"></category><category term="static generators"></category><category term="pictures"></category><category term="galleries"></category></entry><entry><title>Open source KVM over IP</title><link href="https://tingox.github.io/open-source-kvm-over-ip.html" rel="alternate"></link><published>2020-08-03T22:52:25+02:00</published><updated>2020-08-03T22:52:25+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2020-08-03:/open-source-kvm-over-ip.html</id><summary type="html">&lt;p&gt;&lt;a href="https://pikvm.org/"&gt;Pi-KVM&lt;/a&gt; is a very interesting project. It allows you to build a fully functional &lt;a href="https://en.wikipedia.org/wiki/KVM_switch"&gt;KVM&lt;/a&gt; over IP solution using cheap 
hardware and open source software. Source at Github: &lt;a href="https://github.com/pikvm/pikvm"&gt;pikvm/pikvm&lt;/a&gt; The KVM supports virtual CD-ROM and virtual flash drive too. You can power on / off
the server via ATX power …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://pikvm.org/"&gt;Pi-KVM&lt;/a&gt; is a very interesting project. It allows you to build a fully functional &lt;a href="https://en.wikipedia.org/wiki/KVM_switch"&gt;KVM&lt;/a&gt; over IP solution using cheap 
hardware and open source software. Source at Github: &lt;a href="https://github.com/pikvm/pikvm"&gt;pikvm/pikvm&lt;/a&gt; The KVM supports virtual CD-ROM and virtual flash drive too. You can power on / off
the server via ATX power control. Wonderful, and useful too.&lt;/p&gt;
&lt;p&gt;The requirements for the server you are comntrolling isn't too great; it must have HDMI output (for VGA use a VGA-to-HDMI converter) and use  usb keyboard and mouse. As already
mentioned in &lt;a href="https://github.com/pikvm/pikvm/issues/26"&gt;issue 26&lt;/a&gt; it is possible to create a FPGA-based capture device, so in theory you could handle other type of console output too.&lt;/p&gt;</content><category term="Blog"></category><category term="kvm"></category><category term="linux"></category><category term="open source"></category></entry><entry><title>FreeBSD with Debian vm for wireless network</title><link href="https://tingox.github.io/freebsd-with-debian-vm-for-wireless-network.html" rel="alternate"></link><published>2020-08-02T16:22:58+02:00</published><updated>2020-08-02T16:22:58+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2020-08-02:/freebsd-with-debian-vm-for-wireless-network.html</id><summary type="html">&lt;p&gt;New hardware doesn't always have working drivers in &lt;a href="https://www.freebsd.org/"&gt;FreeBSD&lt;/a&gt;. The developers do a great job, but there are not enough of them. 
On the other side, it seems like hardware companies pour out an endless stream of new hardware every month.&lt;/p&gt;
&lt;p&gt;I wanted to see if I could use a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;New hardware doesn't always have working drivers in &lt;a href="https://www.freebsd.org/"&gt;FreeBSD&lt;/a&gt;. The developers do a great job, but there are not enough of them. 
On the other side, it seems like hardware companies pour out an endless stream of new hardware every month.&lt;/p&gt;
&lt;p&gt;I wanted to see if I could use a &lt;a href="https://www.debian.org/"&gt;Debian&lt;/a&gt; virtual machine (vm) as a guest on the FreeBSD host to fix the "unsupported wifi in FreeBSD" problem.
FreeBSD has great support for running virtual machines through &lt;a href="https://bhyve.org/"&gt;bhyve&lt;/a&gt;. And almost all newer machines has the necessary hardware support
for running virtual machines.&lt;/p&gt;
&lt;p&gt;So I bought a cheap laptop on a summer outlet sale from one of the online shops here in Norway. For NOK 1997.- (which is about USD 220.- at the current exchange
 rate) I got an "as new, in original box" &lt;a href="https://psref.lenovo.com/Detail/Lenovo%20Laptops/ideapad_530S_14_AMD?M=81H10000MX"&gt;Lenovo ideapad 530S-14ARR&lt;/a&gt; with AMD Ryzen 3 2200U cpu,
4 GB memory and 128 GB SSD. The integrated graphics is AMD Radeon Vega 3, I was unsure if it was supported but it didn't matter for this experiment. I was pretty sure the wireless
adapter / chipset was not supported, even if the description was a bit vague "11ac, 1x1, Wi-Fi + Bluetooth combo adapter" - many newer laptops have Broadcom wireless and that currently 
has limited support in FreeBSD. Qualcomm support is almost non-existent.&lt;/p&gt;
&lt;p&gt;There is one initial hurdle to overcome when installing and configuring FreeBSD (and Debian too) today: most install methods are set up for a network install. It is possible to install either
without a working network, but it is just harder (I should note that the install itself isn't the hardest part, but adding packages you need after the install is finished is). So I 
used a usb-hub-with-ethernet-port dongle when I did the initial install, for FreeBSD and packages, and also for the Debian vm and packages. In FreeBSD this device shows up as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;root@kg-pod530:~ # usbconfig -d ugen0.2&lt;/span&gt;
&lt;span class="err"&gt;ugen0.2: &amp;lt;GenesysLogic USB2.0 Hub&amp;gt; at usbus0, cfg=0 md=HOST spd=HIGH (480Mbps) pwr=SAVE (100mA)&lt;/span&gt;
&lt;span class="err"&gt;root@kg-pod530:~ # usbconfig -d ugen0.3&lt;/span&gt;
&lt;span class="err"&gt;ugen0.3: &amp;lt;Realtek USB 10/100 LAN&amp;gt; at usbus0, cfg=0 md=HOST spd=HIGH (480Mbps) pwr=ON (100mA)&lt;/span&gt;
&lt;span class="err"&gt;root@kg-pod530:~ # usbconfig -d ugen0.4&lt;/span&gt;
&lt;span class="err"&gt;ugen0.4: &amp;lt;vendor 0x0cf3 product 0xe500&amp;gt; at usbus0, cfg=0 md=HOST spd=FULL (12Mbps) pwr=ON (100mA)&lt;/span&gt;
&lt;span class="err"&gt;root@kg-pod530:~ # usbconfig -d ugen0.5&lt;/span&gt;
&lt;span class="err"&gt;ugen0.5: &amp;lt;GenesysLogic USB3.0 Hub&amp;gt; at usbus0, cfg=0 md=HOST spd=SUPER (5.0Gbps) pwr=SAVE (0mA)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with usbconfig, and this is what shows in &lt;code&gt;/var/log/messges&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ugen0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GenesysLogic&lt;/span&gt; &lt;span class="n"&gt;USB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;Hub&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;usbus0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub2&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;uhub1&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GenesysLogic&lt;/span&gt; &lt;span class="n"&gt;USB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;Hub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;92&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;usbus0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;MTT&lt;/span&gt; &lt;span class="n"&gt;enabled&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;ports&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;removable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt; &lt;span class="n"&gt;powered&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ugen0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Realtek&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;LAN&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;usbus0&lt;/span&gt;

&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ugen0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GenesysLogic&lt;/span&gt; &lt;span class="n"&gt;USB3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;Hub&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;usbus0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub3&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;uhub1&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;GenesysLogic&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;usbus0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;uhub3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;ports&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;removable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt; &lt;span class="n"&gt;powered&lt;/span&gt;

&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ure0&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;uhub2&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ure0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Realtek&lt;/span&gt; &lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;LAN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rev&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addr&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;usbus0&lt;/span&gt;

&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;miibus0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MII&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;ure0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rlphy0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RTL8201E&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;PHY&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;miibus0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rlphy0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;baseT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;baseT&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;FDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="n"&gt;baseTX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="n"&gt;baseTX&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;FDX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auto&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ue0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;USB&lt;/span&gt; &lt;span class="n"&gt;Ethernet&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;ure0&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ue0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ethernet&lt;/span&gt; &lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;e0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;f8&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ue0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;DOWN&lt;/span&gt;
&lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt; &lt;span class="n"&gt;kg&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pod530&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ue0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;UP&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once FreeBSD was installed, I could check what the wireless card was:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;root@kg-pod530:~ # pciconf -lv | grep -B 3 network&lt;/span&gt;
&lt;span class="err"&gt;ppt0@pci0:1:0:0:    class=0x028000 card=0x090117aa chip=0x0042168c rev=0x31 hdr=0x00&lt;/span&gt;
&lt;span class="err"&gt;    vendor     = &amp;#39;Qualcomm Atheros&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;    device     = &amp;#39;QCA9377 802.11ac Wireless Network Adapter&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;    class      = network&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so yes - currently not supported in FreeBSD. Next up was to set up a vm, I chose to install &lt;a href="https://github.com/churchers/vm-bhyve"&gt;vm-bhyve&lt;/a&gt; for that, it makes working with bhyve 
virtual machines easier. I also wanted this vm to have access to the wireless hardware, so figure out how vm-bhyve sees it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;root@kg-pod530:~ # vm passthru&lt;/span&gt;
&lt;span class="err"&gt;DEVICE     BHYVE ID     READY        DESCRIPTION&lt;/span&gt;
&lt;span class="err"&gt;hostb0     0/0/0        No           -&lt;/span&gt;
&lt;span class="err"&gt;none0      0/0/2        No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb1     0/1/0        No           Family 17h (Models 00h-1fh) PCIe Dummy Host Bridge&lt;/span&gt;
&lt;span class="err"&gt;pcib1      0/1/2        No           -&lt;/span&gt;
&lt;span class="err"&gt;pcib2      0/1/7        No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb2     0/8/0        No           Family 17h (Models 00h-1fh) PCIe Dummy Host Bridge&lt;/span&gt;
&lt;span class="err"&gt;pcib3      0/8/1        No           -&lt;/span&gt;
&lt;span class="err"&gt;intsmb0    0/20/0       No           FCH SMBus Controller&lt;/span&gt;
&lt;span class="err"&gt;isab0      0/20/3       No           FCH LPC Bridge&lt;/span&gt;
&lt;span class="err"&gt;hostb3     0/24/0       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb4     0/24/1       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb5     0/24/2       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb6     0/24/3       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb7     0/24/4       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb8     0/24/5       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb9     0/24/6       No           -&lt;/span&gt;
&lt;span class="err"&gt;hostb10    0/24/7       No           -&lt;/span&gt;
&lt;span class="err"&gt;none1      1/0/0        No           QCA9377 802.11ac Wireless Network Adapter&lt;/span&gt;
&lt;span class="err"&gt;nvme0      2/0/0        No           -&lt;/span&gt;
&lt;span class="err"&gt;vgapci0    3/0/0        No           Raven Ridge [Radeon Vega Series / Radeon Vega Mobile Series]&lt;/span&gt;
&lt;span class="err"&gt;hdac0      3/0/1        No           Raven Ridge HDMI/DP Audio Controller&lt;/span&gt;
&lt;span class="err"&gt;none2      3/0/2        No           Family 17h (Models 10h-1fh) Platform Security Processor&lt;/span&gt;
&lt;span class="err"&gt;xhci0      3/0/3        No           -&lt;/span&gt;
&lt;span class="err"&gt;xhci1      3/0/4        No           -&lt;/span&gt;
&lt;span class="err"&gt;hdac1      3/0/6        No           Family 17h (Models 10h-1fh) HD Audio Controller&lt;/span&gt;
&lt;span class="err"&gt;none3      3/0/7        No           -&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;so I want (or rather, the vm needs to have device 1/0/0). The way to configure this is to set up a &lt;code&gt;pptdevs&lt;/code&gt; variable in &lt;code&gt;/boot/loader.conf&lt;/code&gt;. Since I have an AMD cpu, the
&lt;code&gt;hw.vmm.amdvi.enable=1&lt;/code&gt; setting is also needed. Finally you need to load the vmm kernel module. Together, it looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;root@kg-pod530:~ # cat /boot/loader.conf&lt;/span&gt;
&lt;span class="err"&gt;hw.vmm.amdvi.enable=1&lt;/span&gt;
&lt;span class="err"&gt;pptdevs=&amp;quot;1/0/0&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;vmm_load=&amp;quot;YES&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Debian vm install is quite straight forward, but I needed to use the non-free firmware image&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;root@kg-pod530:~ # vm install gateway firmware-10.4.0-amd64-netinst.iso&lt;/span&gt;
&lt;span class="err"&gt;root@kg-pod530:~ # vm console gateway&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Debian vm configuration. I used &lt;a href="https://wiki.debian.org/BridgeNetworkConnectionsProxyArp"&gt;BridgeNetworkConnectionsProxyArp&lt;/a&gt; as a guide, the only thing I needed to change (other 
than network interface names) was the systemd unit file for dhcp-helper. I changed to file to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tingo&lt;/span&gt;&lt;span class="nv"&gt;@pod530&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nl"&gt;gw&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;systemd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;system&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dhcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Unit&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DHCP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;BOOTP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relay&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;agent&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;After&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Service&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forking&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;EnvironmentFile&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dhcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;PIDFile&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dhcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;some&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reason&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;interface&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wlp0s6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;there&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;restarting&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Restart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;failure&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;RestartSec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;TimeoutStartSec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dhcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dhcp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;DHCPHELPER_OPTS&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;multi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;before I changed it, the service would fail on boot and would need to be restarted. I just set up wpa_supplicant, rebooted the vm and it connected to the wireless network.&lt;/p&gt;
&lt;p&gt;Other problems. I also had too restrictive rules on my firewall, so I need to fix that before the response from the DHCP server would get to the FreeBSD machine.&lt;/p&gt;
&lt;p&gt;Final network setup on te FreeBSD side. I tried several things, but in the end, using &lt;a href="https://www.freebsd.org/cgi/man.cgi?query=epair"&gt;epair(4)&lt;/a&gt; interfaces worked.
Currently, network configuration in &lt;code&gt;/etc/rc.conf&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;cloned_interfaces=&amp;quot;bridge0 epair0&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;ifconfig_bridge0=&amp;quot;addm epair0b&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;defaultroute_delay=&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;background_dhclient_epair0a=&amp;quot;YES&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;ifconfig_epair0a=&amp;quot;DHCP&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;ifconfig_epair0b=&amp;quot;up&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the bridge is configured as manual in vm-bhyve, and the vm connects to it. The reason for putting dhclient in the background and minimizing the defaultroute delay is that
the FreeBSD machine will not get an ip address from the DHCP server until the vm is up and working. So better just make it boot quickly.&lt;/p&gt;</content><category term="Blog"></category><category term="freebsd"></category><category term="bhyve"></category><category term="vm"></category><category term="debian"></category><category term="wireless"></category></entry><entry><title>Git resources for newcomers</title><link href="https://tingox.github.io/git-resources-for-newcomers.html" rel="alternate"></link><published>2020-07-22T07:20:16+02:00</published><updated>2020-07-22T07:20:16+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2020-07-22:/git-resources-for-newcomers.html</id><content type="html">&lt;p&gt;When I first started learning git, &lt;a href="https://learngitbranching.js.org/"&gt;Learning git branching&lt;/a&gt; was a great way for me to understand how things works. As it turns out &lt;a href="https://try.github.io/"&gt;Resources to learn Git&lt;/a&gt; has a lot more, all of it useful.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>CudaText looks nice</title><link href="https://tingox.github.io/cudatext-looks-nice.html" rel="alternate"></link><published>2020-02-24T01:24:40+01:00</published><updated>2020-08-02T20:06:40+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2020-02-24:/cudatext-looks-nice.html</id><summary type="html">&lt;p&gt;&lt;a href="http://uvviewsoft.com/cudatext/"&gt;CudaText&lt;/a&gt; looks nice. A lot of features, and written in Pascal too. If I set $EDITOR correctly, it will let me
edit my blog posts too, directly from the Makefile. Perhaps I should spend some time learning it.&lt;/p&gt;
&lt;p&gt;Ok, middle button (mouse) paste doesn't work out of the box, instead …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://uvviewsoft.com/cudatext/"&gt;CudaText&lt;/a&gt; looks nice. A lot of features, and written in Pascal too. If I set $EDITOR correctly, it will let me
edit my blog posts too, directly from the Makefile. Perhaps I should spend some time learning it.&lt;/p&gt;
&lt;p&gt;Ok, middle button (mouse) paste doesn't work out of the box, instead it does something with the scroll wheel. I need to change that.&lt;/p&gt;
&lt;p&gt;Update: that wasn't topo hard, just set &lt;code&gt;"mouse_mid_click_paste": false&lt;/code&gt; in user settings.&lt;/p&gt;</content><category term="Blog"></category><category term="pascal"></category><category term="cudatext"></category></entry><entry><title>Broken theme</title><link href="https://tingox.github.io/broken-theme.html" rel="alternate"></link><published>2019-11-25T17:25:09+01:00</published><updated>2019-11-25T17:25:09+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-11-25:/broken-theme.html</id><summary type="html">&lt;p&gt;For some reason, the simple theme was broken, at least on my machine. So I downloaded &lt;a href="https://github.com/getpelican/pelican-themes"&gt;pelican-themes&lt;/a&gt; and changed to the tuxlite_tbs theme. Also, I need to set ${EDITOR} on my machine. Broken seems to be a theme here...&lt;/p&gt;
&lt;p&gt;Update: but now I need to do &lt;code&gt;cd ..; git clone --recursive …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;For some reason, the simple theme was broken, at least on my machine. So I downloaded &lt;a href="https://github.com/getpelican/pelican-themes"&gt;pelican-themes&lt;/a&gt; and changed to the tuxlite_tbs theme. Also, I need to set ${EDITOR} on my machine. Broken seems to be a theme here...&lt;/p&gt;
&lt;p&gt;Update: but now I need to do &lt;code&gt;cd ..; git clone --recursive https://github.com/getpelican/pelican-themes&lt;/code&gt; on every machine I will post from. Hmm...&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Control mobile information</title><link href="https://tingox.github.io/control-mobile-information.html" rel="alternate"></link><published>2019-11-25T14:11:33+01:00</published><updated>2019-11-25T14:11:33+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-11-25:/control-mobile-information.html</id><summary type="html">&lt;p&gt;Currently the user of a smartphone have very little control over what data he or she shares, and who gets access to data data. The best option today is to assume that everyone who has asked for access to any of your data, has, in fact, acces to /all/ of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Currently the user of a smartphone have very little control over what data he or she shares, and who gets access to data data. The best option today is to assume that everyone who has asked for access to any of your data, has, in fact, acces to /all/ of your data, and shares it with third parties unknown to you. Bleak, but with the lack of transparency in current mobile ecosystems this is what the situation looks like for a user.&lt;/p&gt;
&lt;p&gt;In the future things might be better. Experienced Android users probably know about &lt;a href="https://lineageos.org/"&gt;LineageOS&lt;/a&gt; which gives you a free and open-source Android operating system. You are still dependent on the same services, but at least some control of the operating system itself. Another project is &lt;a href="https://postmarketos.org/"&gt;postmarketOS&lt;/a&gt; which aims to create a Linux distribution that will allow you to use a device for at least ten years. Just in alpha, and probably many years away from their goal, but still interesting. Then there is &lt;a href="https://e.foundation/"&gt;/e/&lt;/a&gt;. Not only do they have privacy as a goal, but in addition to making a privacy-focused operating system for mobiles (taking advantage of LineageOS), but they also build services that you need for your mobile phone and the apps you run on it. Currently, the number of mobile devices supported isn't very large (91 at the time of writing this), but they have a working mobile ecosystem that is pro privacy. Very nice.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Emulation layers</title><link href="https://tingox.github.io/emulation-layers.html" rel="alternate"></link><published>2019-08-05T22:06:16+02:00</published><updated>2019-08-05T22:06:16+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-08-05:/emulation-layers.html</id><summary type="html">&lt;p&gt;I find it interesting that we now have &lt;a href="https://anbox.io/" title="Android In A Box"&gt;Anbox&lt;/a&gt; and &lt;a href="https://www.darlinghq.org/" title="macOS translation layer"&gt;Darling&lt;/a&gt; in addition to &lt;a href="https://www.winehq.org/" title="Wine Is Not An Emulator"&gt;Wine&lt;/a&gt;. I have used Wine successfully in the past, even with a usb label printer once
(which didn't follow the usb specification well and misbehaved under Linux and *BSD). Today, the only Windows applications I need …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I find it interesting that we now have &lt;a href="https://anbox.io/" title="Android In A Box"&gt;Anbox&lt;/a&gt; and &lt;a href="https://www.darlinghq.org/" title="macOS translation layer"&gt;Darling&lt;/a&gt; in addition to &lt;a href="https://www.winehq.org/" title="Wine Is Not An Emulator"&gt;Wine&lt;/a&gt;. I have used Wine successfully in the past, even with a usb label printer once
(which didn't follow the usb specification well and misbehaved under Linux and *BSD). Today, the only Windows applications I need are badly behaved and don't work in Wine, or they
require contact with a physical device (usb or otherwise) and that part doesn't work in Wine.&lt;/p&gt;
&lt;p&gt;So far, I have no need for macOS applications, and no need to run Android apps outside of an Android device.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Useful for document handling</title><link href="https://tingox.github.io/useful-for-document-handling.html" rel="alternate"></link><published>2019-07-20T15:52:09+02:00</published><updated>2019-07-20T15:52:09+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-07-20:/useful-for-document-handling.html</id><summary type="html">&lt;p&gt;Often I find articles about useful tools online, that I need to find back to later. &lt;a href="https://mzucker.github.io/2016/08/15/page-dewarping.html"&gt;Page dewarping&lt;/a&gt; by Matt Zucker (code on &lt;a href="https://github.com/mzucker/page_dewarp"&gt;Github&lt;/a&gt;) is one such article. It will be useful for scanning old documentation.
His &lt;a href="https://github.com/mzucker/noteshrink"&gt;noteshrink&lt;/a&gt; tool and &lt;a href="https://mzucker.github.io/2016/09/20/noteshrink.html"&gt;Compressing and enhancing hand-written notes&lt;/a&gt; article is also interesting, perhaps …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Often I find articles about useful tools online, that I need to find back to later. &lt;a href="https://mzucker.github.io/2016/08/15/page-dewarping.html"&gt;Page dewarping&lt;/a&gt; by Matt Zucker (code on &lt;a href="https://github.com/mzucker/page_dewarp"&gt;Github&lt;/a&gt;) is one such article. It will be useful for scanning old documentation.
His &lt;a href="https://github.com/mzucker/noteshrink"&gt;noteshrink&lt;/a&gt; tool and &lt;a href="https://mzucker.github.io/2016/09/20/noteshrink.html"&gt;Compressing and enhancing hand-written notes&lt;/a&gt; article is also interesting, perhaps I can shrink  some of the scanned PDF files.&lt;/p&gt;
&lt;p&gt;It seems like the &lt;a href="http://diybookscanner.org/archivist/"&gt;Archivist&lt;/a&gt; still is the choice for a DIY book scanner - it is easy to understand why, a lot of thought has been put into the design. I wonder if it is possible to create something more portable?
The &lt;a href="https://forum.diybookscanner.org/viewtopic.php?f=14&amp;amp;t=3125"&gt;auto page flip scanner&lt;/a&gt; thread in the forum is also interesting.
On the software side, some useful tools are &lt;a href="https://github.com/Tenrec-Builders/pi-scan"&gt;Pi Scan&lt;/a&gt;, &lt;a href="https://github.com/4lex4/scantailor-advanced"&gt;ScanTailor Advanced&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hmm, what about &lt;a href="https://github.com/DIYBookScanner/spreadpi"&gt;SpreadPi&lt;/a&gt; / &lt;a href="https://github.com/DIYBookScanner/spreads"&gt;Spreads&lt;/a&gt;? Does Pi Scan replace them? Or are they still useful?&lt;/p&gt;
&lt;p&gt;Lots of info over at the &lt;a href="https://diybookscanner.org/"&gt;DIY Book Scanner&lt;/a&gt; &lt;a href="https://forum.diybookscanner.org/"&gt;forums&lt;/a&gt;.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>decentralized and local-first services</title><link href="https://tingox.github.io/decentralized-and-local-first-services.html" rel="alternate"></link><published>2019-07-13T19:15:42+02:00</published><updated>2019-07-13T19:15:42+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-07-13:/decentralized-and-local-first-services.html</id><summary type="html">&lt;p&gt;The article &lt;a href="https://runyourown.social/"&gt;Run your own social&lt;/a&gt; which I found via &lt;a href="https://boingboing.net/2019/07/12/roll-your-own.html"&gt;BoingBoing&lt;/a&gt; is interesting. If you put the question of why anyone would want another time-thief in their life (yes, a new service will come as an addition, not as a replacement) it explains a way to do it, not only …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The article &lt;a href="https://runyourown.social/"&gt;Run your own social&lt;/a&gt; which I found via &lt;a href="https://boingboing.net/2019/07/12/roll-your-own.html"&gt;BoingBoing&lt;/a&gt; is interesting. If you put the question of why anyone would want another time-thief in their life (yes, a new service will come as an addition, not as a replacement) it explains a way to do it, not only the technical issues, but what it requires of effort in other areas too.&lt;/p&gt;
&lt;p&gt;One of the sources / inspirations is the &lt;a href="https://www.inkandswitch.com/local-first.html"&gt;Local-first software&lt;/a&gt; article. The authors have built some interesting prototypes based on conflict-free replicated datatype or &lt;a href="https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type"&gt;CRDT&lt;/a&gt; that shows that distributed tools are possible without using hosted or centralized servers.&lt;/p&gt;
&lt;p&gt;2019-08-06 update: &lt;a href="https://freedombone.net/"&gt;Freedombone&lt;/a&gt; and &lt;a href="https://yunohost.org/"&gt;YunoHost&lt;/a&gt; also looks interesting. I should check them out when I find free time for it.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Pelican 4.0.1 is in</title><link href="https://tingox.github.io/pelican-4-0-1-is-in.html" rel="alternate"></link><published>2019-07-13T16:21:12+02:00</published><updated>2019-07-13T16:21:12+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-07-13:/pelican-4-0-1-is-in.html</id><summary type="html">&lt;p&gt;Long time since I posted here. Time has passed, and now Pelican 4.0.1 is out, I installed that on my new workstation (along with a few other missing tools). That's all.&lt;/p&gt;
&lt;p&gt;Ok, it seems I managed to break it again. Will this change fix anything?&lt;/p&gt;
&lt;p&gt;As it turns …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Long time since I posted here. Time has passed, and now Pelican 4.0.1 is out, I installed that on my new workstation (along with a few other missing tools). That's all.&lt;/p&gt;
&lt;p&gt;Ok, it seems I managed to break it again. Will this change fix anything?&lt;/p&gt;
&lt;p&gt;As it turns out, using &lt;code&gt;git submodule update&lt;/code&gt; isn't wise. Atleast until you have fixed your submodule setup so
the submodule tracks the correct branch of that repository. Oh well, I learned something.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://stackoverflow.com/questions/18770545/why-is-my-git-submodule-head-detached-from-master"&gt;Why is my GIT Submodule HEAD detached from master?&lt;/a&gt; on stackoverflow for some answers.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>another git cheatsheet</title><link href="https://tingox.github.io/another-git-cheatsheet.html" rel="alternate"></link><published>2019-03-19T17:21:54+01:00</published><updated>2019-03-19T17:21:54+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2019-03-19:/another-git-cheatsheet.html</id><content type="html">&lt;p&gt;I found another &lt;a href="http://rogerdudler.github.io/git-guide/files/git_cheat_sheet.pdf"&gt;git cheat sheet&lt;/a&gt;, which looks very nice. Found at &lt;a href="http://rogerdudler.github.io/git-guide/"&gt;git - the simple guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, &lt;a href="https://git-scm.com/book/en/v2"&gt;Pro Git&lt;/a&gt; is an entire book about Git, available under a Creative Commons license. Cool!&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Alternatives to Github</title><link href="https://tingox.github.io/alternatives-to-github.html" rel="alternate"></link><published>2018-06-05T00:50:51+02:00</published><updated>2018-06-05T00:50:51+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-06-05:/alternatives-to-github.html</id><content type="html">&lt;p&gt;Alternatives to Github, some offer a hosted experience, some requires self-hosting. Check out &lt;a href="https://gitea.io/" title="Gitea"&gt;Gitea&lt;/a&gt; which requires Go, &lt;a href="https://about.gitlab.com/" title="GitLab"&gt;GitLab&lt;/a&gt;, &lt;a href="https://bitbucket.org/" title="Bitbucket"&gt;Bitbucket&lt;/a&gt; by Atlassian, &lt;a href="http://gitprep.yukikimoto.com/" title="GitPrep"&gt;GitPrep&lt;/a&gt; which calls itself a Github clone, &lt;a href="https://kallithea-scm.org/" title="Kallithea"&gt;Kallithea&lt;/a&gt;, &lt;a href="https://www.phacility.com/phabricator/" title="Phabricator"&gt;Phabricator&lt;/a&gt; which is used by FreeBSD among others. There are probably more as well.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>git - more to learn</title><link href="https://tingox.github.io/git-more-to-learn.html" rel="alternate"></link><published>2018-05-25T01:59:38+02:00</published><updated>2018-05-25T01:59:38+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-05-25:/git-more-to-learn.html</id><summary type="html">&lt;p&gt;For some reason, the submodule ("output") had a detached head, and no matter how much I tried&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;git submodule init&lt;/span&gt;
&lt;span class="err"&gt;git submodule update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the HEAD was still detached. In the end, I just changed into the output directory and did a &lt;code&gt;git checkout master&lt;/code&gt; - the existing content was going to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For some reason, the submodule ("output") had a detached head, and no matter how much I tried&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;git submodule init&lt;/span&gt;
&lt;span class="err"&gt;git submodule update&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the HEAD was still detached. In the end, I just changed into the output directory and did a &lt;code&gt;git checkout master&lt;/code&gt; - the existing content was going to be flushed away by Pelican anyway. That worked nicely.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Slides with Markdown</title><link href="https://tingox.github.io/slides-with-markdown.html" rel="alternate"></link><published>2018-05-24T23:54:28+02:00</published><updated>2018-05-24T23:54:28+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-05-24:/slides-with-markdown.html</id><summary type="html">&lt;p&gt;I should check out &lt;a href="https://github.com/adamzap/landslide" title="Landslide"&gt;Landslide&lt;/a&gt;, &lt;a href="https://yhatt.github.io/marp/" title="Marp"&gt;Marp&lt;/a&gt;, &lt;a href="https://pandoc.org/" title="pandoc"&gt;pandoc&lt;/a&gt;, &lt;a href="https://github.com/jacksingleton/hacker-slides" title="Hacker Slides"&gt;Hacker Slides&lt;/a&gt; and other Markdown-powered slide generators.
Not my idea, I read the article &lt;a href="https://opensource.com/article/18/5/markdown-slide-generators"&gt;4 Markdown-powered slide generators&lt;/a&gt; by Scott Nesbitt. All inspiration comes from there.&lt;/p&gt;
&lt;p&gt;Landslide is (mostly) Python which is nice. Marp is an &lt;a href="http://electron.atom.io/"&gt;Electron&lt;/a&gt; app, so a bit "heavier" on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I should check out &lt;a href="https://github.com/adamzap/landslide" title="Landslide"&gt;Landslide&lt;/a&gt;, &lt;a href="https://yhatt.github.io/marp/" title="Marp"&gt;Marp&lt;/a&gt;, &lt;a href="https://pandoc.org/" title="pandoc"&gt;pandoc&lt;/a&gt;, &lt;a href="https://github.com/jacksingleton/hacker-slides" title="Hacker Slides"&gt;Hacker Slides&lt;/a&gt; and other Markdown-powered slide generators.
Not my idea, I read the article &lt;a href="https://opensource.com/article/18/5/markdown-slide-generators"&gt;4 Markdown-powered slide generators&lt;/a&gt; by Scott Nesbitt. All inspiration comes from there.&lt;/p&gt;
&lt;p&gt;Landslide is (mostly) Python which is nice. Marp is an &lt;a href="http://electron.atom.io/"&gt;Electron&lt;/a&gt; app, so a bit "heavier" on requirements, pandoc looks complicated, and Hacker Slides is an app for &lt;a href="https://sandstorm.io/"&gt;Sandstorm&lt;/a&gt; and &lt;a href="https://oasis.sandstorm.io/"&gt;Sandstorm Oasis&lt;/a&gt; so "heavy" again.&lt;/p&gt;
&lt;p&gt;This article is the first on this blog written and published from my FreeBSD workstation, I just installed Pelican and cloned the github repo. It works in the same way as on Linux, except that I use 'gmake' instead of 'make'. Nice!&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Github cheatsheets</title><link href="https://tingox.github.io/github-cheatsheets-.html" rel="alternate"></link><published>2018-02-27T15:24:59+01:00</published><updated>2018-02-27T15:24:59+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-02-27:/github-cheatsheets-.html</id><summary type="html">&lt;p&gt;There are two slightly different git "cheat sheets" that you can download from Github, one &lt;a href="https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf"&gt;blue&lt;/a&gt; and 
one &lt;a href="https://education.github.com/git-cheat-sheet-education.pdf"&gt;green&lt;/a&gt; in color. The blue one refers to Github Training while the green one refers to Github Education.
Also, contents and wording is slightly different between them. Still, they are both useful …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There are two slightly different git "cheat sheets" that you can download from Github, one &lt;a href="https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf"&gt;blue&lt;/a&gt; and 
one &lt;a href="https://education.github.com/git-cheat-sheet-education.pdf"&gt;green&lt;/a&gt; in color. The blue one refers to Github Training while the green one refers to Github Education.
Also, contents and wording is slightly different between them. Still, they are both useful.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Progress on Windows</title><link href="https://tingox.github.io/progress-on-windows-.html" rel="alternate"></link><published>2018-02-13T17:20:53+01:00</published><updated>2018-02-13T17:20:53+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-02-13:/progress-on-windows-.html</id><summary type="html">&lt;p&gt;Ok, I have figured out how to get date the Makefile in Windows, using powershell and a powershell script.
The script is simple&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;get-date -UFormat &amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;yes, that is all. From the Makefile, I run it as &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;powershell -File .\ScriptDate.ps1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the Makefile fragment looks …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ok, I have figured out how to get date the Makefile in Windows, using powershell and a powershell script.
The script is simple&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;get-date -UFormat &amp;#39;%Y-%m-%d %H:%M:%S&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;yes, that is all. From the Makefile, I run it as &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;powershell -File .\ScriptDate.ps1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;the Makefile fragment looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;DATE := $(shell powershell -File .\ScriptDate.ps1)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;very satisfying to finally figure this out.&lt;/p&gt;
&lt;p&gt;The problem with extra dashes ('-') still exists, the only improvement I have managed is to remove the dash in front.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Output first</title><link href="https://tingox.github.io/output-first.html" rel="alternate"></link><published>2018-02-12T17:07:53+01:00</published><updated>2018-02-12T17:07:53+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-02-12:/output-first.html</id><content type="html">&lt;p&gt;As the original article says; you have to commit and push the output directory &lt;em&gt;before&lt;/em&gt; pushing the source files.
Don't forget it again!&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Pelican on Windows</title><link href="https://tingox.github.io/pelican-on-windows.html" rel="alternate"></link><published>2018-02-12T16:15:01+01:00</published><updated>2018-02-12T16:15:01+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2018-02-12:/pelican-on-windows.html</id><summary type="html">&lt;p&gt;Installing Pelican on Windows is quite easy. You need &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; of course, then it is just 'pip install pelican' followed 
by 'pip install MarkDown' and Pelican is installed. All this from &lt;a href="https://en.wikipedia.org/wiki/PowerShell"&gt;PowerShell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, my setup uses a Makefile (originally I set up this under Linux). So I need make, the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Installing Pelican on Windows is quite easy. You need &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; of course, then it is just 'pip install pelican' followed 
by 'pip install MarkDown' and Pelican is installed. All this from &lt;a href="https://en.wikipedia.org/wiki/PowerShell"&gt;PowerShell&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, my setup uses a Makefile (originally I set up this under Linux). So I need make, the Makefile needs sed and tr
and perhaps date. &lt;a href="http://gnuwin32.sourceforge.net/"&gt;GnuWin&lt;/a&gt; to the rescue, it has packages for &lt;a href="http://gnuwin32.sourceforge.net/packages/make.htm"&gt;make&lt;/a&gt;, &lt;a href="http://gnuwin32.sourceforge.net/packages/sed.htm"&gt;sed&lt;/a&gt; and &lt;a href="http://gnuwin32.sourceforge.net/packages/coreutils.htm"&gt;coreutils&lt;/a&gt; (which contains tr).&lt;/p&gt;
&lt;p&gt;There are some things I haven't got working, like date. The date command from GnuWin coreutils package is installed, when I run
it from a powershell (the same command as in my Makefile, it works. If I enable it in the Makefile, make hangs.
Another issue is that make generates content filenames with prefixed and postfixed with dashes ('-'), even if the Makefile code
to generate a slug works. If the slug is 'this-is-a-test", the filename will be '-this-is-a-test-.md' and I don't know why yet.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Lack of news</title><link href="https://tingox.github.io/lack-of-news.html" rel="alternate"></link><published>2017-11-29T14:06:50+01:00</published><updated>2017-11-29T14:06:50+01:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2017-11-29:/lack-of-news.html</id><content type="html">&lt;p&gt;The lack of news here just mirrors the fact that I am busy doing other things. Nothing to worry about.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Markup - MarkDown</title><link href="https://tingox.github.io/markup-markdown.html" rel="alternate"></link><published>2017-09-04T11:19:22+02:00</published><updated>2017-09-04T11:19:22+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2017-09-04:/markup-markdown.html</id><content type="html">&lt;p&gt;Most static site generators defaults to &lt;a href="https://daringfireball.net/projects/markdown/"&gt;MarkDown&lt;/a&gt; as a markup language. So I better learn it. There is a &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet"&gt;Markdown Cheatsheet&lt;/a&gt; available. Wikipedia:&lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt;.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>another markup option - wikicreole</title><link href="https://tingox.github.io/another-markup-option-wikicreole.html" rel="alternate"></link><published>2017-09-01T12:56:41+02:00</published><updated>2017-09-01T12:56:41+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2017-09-01:/another-markup-option-wikicreole.html</id><content type="html">&lt;p&gt;The &lt;a href="http://www.wikicreole.org/" title="Wikicreole"&gt;wikicreole&lt;/a&gt; markup system looks almost like the markup that &lt;a href="http://mediawiki.org/" title="Mediawiki"&gt;Mediawiki&lt;/a&gt; uses, which is nice. 
I have used mediawiki a lot, so this is one syntax that I am familiar with. Wikicreole exists as a plugin for Pelican as 
well &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/creole_reader"&gt;Creole Reader&lt;/a&gt;.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Easy to break</title><link href="https://tingox.github.io/easy-to-break.html" rel="alternate"></link><published>2017-08-31T17:36:18+02:00</published><updated>2017-09-01T15:06:22+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2017-08-31:/easy-to-break.html</id><summary type="html">&lt;p&gt;Pelican works, but it seems a bit fragile. 'make html' works all the time, but 'make publish' followed by the necessary 
git commands doesn't always give the expected result. Sometimes only the text is published, and lacks the "theme", 
which creates a bad look.&lt;/p&gt;
&lt;p&gt;2017-09-01: and it broke again today …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pelican works, but it seems a bit fragile. 'make html' works all the time, but 'make publish' followed by the necessary 
git commands doesn't always give the expected result. Sometimes only the text is published, and lacks the "theme", 
which creates a bad look.&lt;/p&gt;
&lt;p&gt;2017-09-01: and it broke again today. Not sure why, I must figure that out.&lt;/p&gt;
&lt;p&gt;2017-09-01: ok, it turns out that &lt;code&gt;SITEURL&lt;/code&gt; in &lt;code&gt;publishconf.py&lt;/code&gt; had http, not https in the URL.
        Changing that made all the difference.&lt;/p&gt;</content><category term="Blog"></category></entry><entry><title>Second post</title><link href="https://tingox.github.io/second-post.html" rel="alternate"></link><published>2017-08-31T14:01:49+02:00</published><updated>2017-08-31T14:01:49+02:00</updated><author><name>Torfinn Ingolfsen</name></author><id>tag:tingox.github.io,2017-08-31:/second-post.html</id><summary type="html">&lt;p&gt;This is just the second blog post. The inspiration for doing this came from this &lt;a href="https://fedoramagazine.org/make-github-pages-blog-with-pelican/" title="Make a Github Pages blog with Pelican"&gt;article&lt;/a&gt;. Other options for static
website generators are &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; written in Ruby, &lt;a href="http://hyde.github.io/"&gt;Hyde&lt;/a&gt; written in Python, 
&lt;a href="https://hexo.io/"&gt;Hexo&lt;/a&gt; written in Javascript (nodeJS), &lt;a href="http://gohugo.io/"&gt;Hugo&lt;/a&gt; written in Go, 
&lt;a href="https://github.com/eudicots/Cactus"&gt;Cactus&lt;/a&gt; written in Python and using Django, &lt;a href="https://www.getlektor.com/"&gt;Lektor&lt;/a&gt; 
in Python …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is just the second blog post. The inspiration for doing this came from this &lt;a href="https://fedoramagazine.org/make-github-pages-blog-with-pelican/" title="Make a Github Pages blog with Pelican"&gt;article&lt;/a&gt;. Other options for static
website generators are &lt;a href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; written in Ruby, &lt;a href="http://hyde.github.io/"&gt;Hyde&lt;/a&gt; written in Python, 
&lt;a href="https://hexo.io/"&gt;Hexo&lt;/a&gt; written in Javascript (nodeJS), &lt;a href="http://gohugo.io/"&gt;Hugo&lt;/a&gt; written in Go, 
&lt;a href="https://github.com/eudicots/Cactus"&gt;Cactus&lt;/a&gt; written in Python and using Django, &lt;a href="https://www.getlektor.com/"&gt;Lektor&lt;/a&gt; 
in Python and using Jinja2, &lt;a href="http://www.sphinx-doc.org/"&gt;Sphinx&lt;/a&gt; written in Python and using &lt;a href="http://docutils.sourceforge.net/rst.html" title="reStructuredText"&gt;rST&lt;/a&gt; as markup language,
&lt;a href="https://www.getnikola.com/"&gt;Nikola&lt;/a&gt; written in Python it uses rST as default markup, but supports many more. It also has 
a &lt;a href="https://plugins.getnikola.com/v7/mediawiki/" title="Nikola mediawiki smc.mw"&gt;plugin&lt;/a&gt; for Mediawiki markup. Lots more on &lt;a href="https://www.staticgen.com/"&gt;StaticGen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hmm, it looks like Lektor also has support for Github pages.&lt;/p&gt;</content><category term="Blog"></category></entry></feed>